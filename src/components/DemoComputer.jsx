/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Author: GeniusPilot2016 (https://sketchfab.com/GeniusPilot2016)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/desktop-computer-1d86f13480454fe5b6a25e1acea415f3
Title: Desktop Computer
*/

import React, { useRef } from 'react'
import {useGLTF, useTexture, useVideoTexture } from '@react-three/drei'
import * as THREE from 'three'
import { Bloom, EffectComposer, SSAO } from '@react-three/postprocessing'

const DemoComputer = ({props, projectID}) => {

  const { nodes, materials } = useGLTF('/models/desktop_computer.glb')
  const screenTexture = useVideoTexture(`/textures/project/project${projectID + 1}.mp4`)
  screenTexture.wrapS = THREE.RepeatWrapping;
  screenTexture.wrapT = THREE.RepeatWrapping;
  screenTexture.repeat.set(0.98, 0.98); // Adjust these values as needed
  screenTexture.offset.set(0.01, 0.01);

  return (
    <group {...props} dispose={null}>
        <EffectComposer enableNormalPass>
            <Bloom intensity={1} luminanceThreshold={1} luminanceSmoothing={5} />
            <SSAO radius={1} intensity={1} />
        </EffectComposer>
      <group position={[0, 0.13999999, 0.10365203]} scale={0.12960002}>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Object_4.geometry}
          material={materials.painted_metal}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Object_5.geometry}
          material={materials.front_panel}
        />
      </group>
      <group position={[-0.5, 0, -0.90148509]} rotation={[Math.PI / 2, 0, 0]}>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Object_9.geometry}
          material={materials.black_plastic}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Object_10.geometry}
          material={materials.silver_plastic}
        />
      </group>
      <group position={[-0.5, 0.26835614, -0.70759195]} rotation={[Math.PI / 2, 0, 0]}>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Object_14.geometry}
          material={materials.monitor_case}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Object_15.geometry}
          material={materials.display}
        >
            <meshStandardMaterial map={screenTexture} toneMapped={false} roughness={0.2} metalness={0.8}
            emissiveIntensity={0.1}
            aoMap={nodes.Object_15.geometry.attributes.uv2}
            emissive={new THREE.Color(0x222222)} />
        </mesh>
      </group>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Object_7.geometry}
        material={materials.monitor_case}
        position={[-0.5, 0.26835614, -0.70759195]}
        rotation={[Math.PI / 2, 0, 0]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Object_12.geometry}
        material={materials.black_plastic}
        position={[-0.5, 0, -0.90148509]}
        rotation={[Math.PI / 2, 0, 0]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Object_17.geometry}
        material={materials.monitor_case}
        position={[-0.5, 0.46835613, 0.04125798]}
        rotation={[1.74532937, 0, 0]}
      />
    </group>
  )
}

useGLTF.preload('/models/desktop_computer.glb')
export default DemoComputer